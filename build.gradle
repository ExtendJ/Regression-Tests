apply plugin: 'java'
apply plugin: 'maven'

defaultTasks 'test8'

repositories {
	mavenCentral()
}

sourceSets {
	test {
		java {
			srcDirs 'src/core', 'src/tests'
		}
	}
	runtimeClasses {
		java {
			srcDir file('framework')
		}
	}
}

dependencies {
	testCompile 'junit:junit:4.12'
}

task compileRuntimeClasses(type: JavaCompile) {
	classpath = sourceSets.runtimeClasses.compileClasspath
	destinationDir = project.file('runtime/classes')
	source sourceSets.runtimeClasses.java
}

sourceCompatibility = targetCompatibility = '1.6'

// Ensure that the runtime classes are always built.
compileJava.dependsOn 'compileRuntimeClasses'

// Disable the default test task as it would otherwise run all test suites.
// A test suite must be explicitly selected (test7 or test8).
test.onlyIf { false }

task test7(type: Test) {
	dependsOn 'cleanTest'
	include 'tests/extendj/TestJava7.class'
	ignoreFailures = true // Needed for Jenkins pipeline to generate test report.

	systemProperties = [
		'extendj.jar': System.getProperty('extendj.jar', 'extendj.jar'),
		'includes': System.getProperty('includes', ''),
		'excludes': System.getProperty('excludes', ''),
		'test': System.getProperty('test', ''),
		'fork': System.getProperty('fork', 'false'),
		'debug': System.getProperty('debug', 'false'),
	]
}

task test8(type: Test) {
	dependsOn 'cleanTest'
	include 'tests/extendj/TestJava8.class'
	ignoreFailures = true // Needed for Jenkins pipeline to generate test report.

	systemProperties = [
		'extendj.jar': System.getProperty('extendj.jar', 'extendj.jar'),
		'includes': System.getProperty('includes', ''),
		'excludes': System.getProperty('excludes', ''),
		'test': System.getProperty('test', ''),
		'fork': System.getProperty('fork', 'false'),
		'debug': System.getProperty('debug', 'false'),
	]
}

// Set the Gradle wrapper version:
task wrapper(type: Wrapper) {
	gradleVersion = '3.4.1'
}
